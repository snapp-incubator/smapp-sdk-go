// Code generated by MockGen. DO NOT EDIT.
// Source: services/matrix/matrix.go
//
// Generated by this command:
//
//	mockgen -source services/matrix/matrix.go -destination=services/matrix/matrix_mock.go -mock_names Interface=MockMatrixClient -package=matrix
//

// Package matrix is a generated GoMock package.
package matrix

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMatrixClient is a mock of Interface interface.
type MockMatrixClient struct {
	ctrl     *gomock.Controller
	recorder *MockMatrixClientMockRecorder
	isgomock struct{}
}

// MockMatrixClientMockRecorder is the mock recorder for MockMatrixClient.
type MockMatrixClientMockRecorder struct {
	mock *MockMatrixClient
}

// NewMockMatrixClient creates a new mock instance.
func NewMockMatrixClient(ctrl *gomock.Controller) *MockMatrixClient {
	mock := &MockMatrixClient{ctrl: ctrl}
	mock.recorder = &MockMatrixClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMatrixClient) EXPECT() *MockMatrixClientMockRecorder {
	return m.recorder
}

// GetMatrix mocks base method.
func (m *MockMatrixClient) GetMatrix(sources, targets []Point, options CallOptions) (Output, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMatrix", sources, targets, options)
	ret0, _ := ret[0].(Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMatrix indicates an expected call of GetMatrix.
func (mr *MockMatrixClientMockRecorder) GetMatrix(sources, targets, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMatrix", reflect.TypeOf((*MockMatrixClient)(nil).GetMatrix), sources, targets, options)
}

// GetMatrixWithContext mocks base method.
func (m *MockMatrixClient) GetMatrixWithContext(ctx context.Context, sources, targets []Point, options CallOptions) (Output, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMatrixWithContext", ctx, sources, targets, options)
	ret0, _ := ret[0].(Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMatrixWithContext indicates an expected call of GetMatrixWithContext.
func (mr *MockMatrixClientMockRecorder) GetMatrixWithContext(ctx, sources, targets, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMatrixWithContext", reflect.TypeOf((*MockMatrixClient)(nil).GetMatrixWithContext), ctx, sources, targets, options)
}
