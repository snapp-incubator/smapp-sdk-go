// Code generated by MockGen. DO NOT EDIT.
// Source: services/area-gateways/area_gateways.go
//
// Generated by this command:
//
//	mockgen -source services/area-gateways/area_gateways.go -destination=services/area-gateways/area_gateways_mock.go -mock_names Interface=MockAreaGatewaysClient -package=area_gateways
//

// Package area_gateways is a generated GoMock package.
package area_gateways

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAreaGatewaysClient is a mock of Interface interface.
type MockAreaGatewaysClient struct {
	ctrl     *gomock.Controller
	recorder *MockAreaGatewaysClientMockRecorder
	isgomock struct{}
}

// MockAreaGatewaysClientMockRecorder is the mock recorder for MockAreaGatewaysClient.
type MockAreaGatewaysClientMockRecorder struct {
	mock *MockAreaGatewaysClient
}

// NewMockAreaGatewaysClient creates a new mock instance.
func NewMockAreaGatewaysClient(ctrl *gomock.Controller) *MockAreaGatewaysClient {
	mock := &MockAreaGatewaysClient{ctrl: ctrl}
	mock.recorder = &MockAreaGatewaysClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAreaGatewaysClient) EXPECT() *MockAreaGatewaysClientMockRecorder {
	return m.recorder
}

// GetGateways mocks base method.
func (m *MockAreaGatewaysClient) GetGateways(lat, lon float64, options CallOptions) (Area, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGateways", lat, lon, options)
	ret0, _ := ret[0].(Area)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGateways indicates an expected call of GetGateways.
func (mr *MockAreaGatewaysClientMockRecorder) GetGateways(lat, lon, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGateways", reflect.TypeOf((*MockAreaGatewaysClient)(nil).GetGateways), lat, lon, options)
}

// GetGatewaysWithContext mocks base method.
func (m *MockAreaGatewaysClient) GetGatewaysWithContext(ctx context.Context, lat, lon float64, options CallOptions) (Area, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGatewaysWithContext", ctx, lat, lon, options)
	ret0, _ := ret[0].(Area)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGatewaysWithContext indicates an expected call of GetGatewaysWithContext.
func (mr *MockAreaGatewaysClientMockRecorder) GetGatewaysWithContext(ctx, lat, lon, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGatewaysWithContext", reflect.TypeOf((*MockAreaGatewaysClient)(nil).GetGatewaysWithContext), ctx, lat, lon, options)
}
